OtherDiceGame extends GamblingGame{

	Dice[] setupDiceArray(int numberOfDice){
		Dice[] diceArray;
		for (int i = 0; i < numberOfDice; i++){
			diceArray.add(new Dice(6)); //assuming regular 6 sided die
		}
	}

	int chooseNumber(){
		//ask player for number
		return number;
	}

	int countOccurrences(int chosenNumber, int[] rolledArray){
		int occurrences = 0;
		for (int i : rolledArray){
			if (i == chosenNumber){
			occurrences++;
			}
		}
		return occurrences;
	}

	int[] rollAllDice(Dice[] diceArray){
		int[] rolledArray;
		for (int i = 0; i < numberOfDice; i++){
			rolledArray.add(diceArray[i].roll());
		}
		return rolledArray;
	}

	double wager(Player player){
		return p.placeBet();
	}

	public void play(GamblingPlayer player){
		Dice[] diceArray = setupDiceArray(diceArray, 3);
		double bet += wager(player);
		int chosenNumber = chooseNumber();
		int[] rolledArray = rollAllDice(diceArray);
		int score = countOccurrences(chosenNumber, rolledArray);
		switch (score){
			case 1:
				player.receiveWinnings(bet * 2);
				System.out.println("You broke even");
				break;
			case 2:
				player.recieveWinnings(bet * 2);
				System.out.println("You doubled your bet");
				break;
			case 3:
				player.recieveWinnings(bet * 3);
				System.out.println("You tripled your bet");
				break;
			default:
				System.out.println("You won nothing");
		}
		return;
	}
}